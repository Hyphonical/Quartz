name: üöÄ Build & Deploy Docker Image on Dokploy

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ["main"] # Trigger workflow on push to main branch
  workflow_dispatch: {} # Allow manual workflow runs

concurrency:
  group: ${{ github.workflow }} # Prevent concurrent runs of the same workflow
  cancel-in-progress: false

jobs:
  build-and-push-dockerfile-image:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Fail job if it runs longer than 30 minutes

    environment:
      name: production
      url: https://wiki.voidtales.win/

    steps:
      # Checkout the repository code
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v4

      # Log in to Docker Hub using secrets for authentication
      - name: üîë Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Set your Docker Hub username in repository secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}   # Set your Docker Hub token in repository secrets

      # Build the Docker image and push it to Docker Hub
      - name: üèóÔ∏è Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context is the root of the repository
          file: ./Dockerfile # Use the Dockerfile in the root directory
          push: true # Push the built image to Docker Hub
          tags: |
            inventory69/voidtales-wiki:latest
          platforms: linux/amd64 # Target platform for the image

      # Trigger deployment on Dokploy using a POST request
      - name: üöÄ Trigger Dokploy Deployment
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.DOKPLOY_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{ "image_tag": "inventory69/voidtales-wiki:latest" }' \
          "${{ secrets.API_HOST }}/api/deploy/${{ secrets.DOKPLOY_APP_ID }}"
        env:
          DOKPLOY_API_TOKEN: ${{ secrets.DOKPLOY_API_TOKEN }} # Dokploy API token from secrets
          DOKPLOY_APP_ID: ${{ secrets.DOKPLOY_APP_ID }}       # Dokploy app ID from secrets
          API_HOST: ${{ secrets.API_HOST }}                   # Dokploy API host from secrets